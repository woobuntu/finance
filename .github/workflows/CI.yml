name: Continuous Integration
on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: inject config.yaml
        run: |
          cat << 'EOF' > ./server/config/config.yaml
          client:
            host: https://${{ secrets.CLIENT_DOMAIN }}
          slack:
            webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          EOF

      - name: Log in to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: build docker compose image
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          REACT_APP_API_BASE_URL: ${{ secrets.REACT_APP_API_BASE_URL }}
          CERTBOT_EMAIL: ${{ secrets.CERTBOT_EMAIL }}
          CLIENT_DOMAIN: ${{ secrets.CLIENT_DOMAIN }}
          SERVER_DOMAIN: ${{ secrets.SERVER_DOMAIN }}
        run: |
          docker compose build
          docker compose push

  prepare-compose-file:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract Docker Compose File
        run: |
          mkdir artifact
          cp compose.yaml artifact/compose.yaml

      - name: Upload Docker Compose File
        uses: actions/upload-artifact@v2
        with:
          name: compose.yaml
          path: artifact/compose.yaml
